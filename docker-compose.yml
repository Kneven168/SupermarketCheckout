version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: checkout-postgres
    environment:
      POSTGRES_DB: checkout_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: checkout-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  checkout-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: checkout-app
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/checkout_db
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: test123
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: checkout-frontend
    ports:
      - "4200:80"
    depends_on:
      - checkout-app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
